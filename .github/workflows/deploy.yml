name: Deploy Firebase Hosting

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Remove cached Node.js versions  
        run: |
          sudo rm -rf /opt/hostedtoolcache/node/*

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Instalar dependências
        run: npm install

      - name: Verificar se os secrets estão sendo carregados
        run: |
          for var in VITE_FIREBASE_API_KEY VITE_FIREBASE_AUTH_DOMAIN VITE_FIREBASE_DATABASE_URL VITE_FIREBASE_PROJECT_ID VITE_FIREBASE_STORAGE_BUCKET VITE_FIREBASE_MESSAGING_SENDER_ID VITE_FIREBASE_APP_ID; do
            if [ -z "${{ secrets[$var] }}" ]; then
              echo "❌ $var está vazio!"
            else
              echo "✅ $var foi carregado corretamente."
            fi
          done

      - name: Criar arquivo .env
        run: |
          rm -f .env
          touch .env
          for var in VITE_FIREBASE_API_KEY VITE_FIREBASE_AUTH_DOMAIN VITE_FIREBASE_DATABASE_URL VITE_FIREBASE_PROJECT_ID VITE_FIREBASE_STORAGE_BUCKET VITE_FIREBASE_MESSAGING_SENDER_ID VITE_FIREBASE_APP_ID; do
            echo "$var=${{ secrets[$var] }}" >> .env
          done

      - name: Verificar conteúdo do .env
        run: cat .env

      - name: Fazer build do projeto
        run: VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }} npm run build -- --mode production

      - name: Criar credencial Firebase
        run: echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_ESP32_309D2 }}" > firebase-service-account.json

      - name: Deploy no Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ESP32_309D2 }}
          channelId: live
          projectId: esp32-309d2